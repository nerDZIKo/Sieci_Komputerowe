import os
import sys
import time

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

def quiz():
    questions = [
        {"question": "Kt√≥re dwie warstwy modelu OSI majƒÖ takƒÖ samƒÖ funkcjonalno≈õƒá jak dwie warstwy modelu TCP/IP?",
         "options": ["sieƒá", "sesja", "≈ÇƒÖcze danych", "fizyczny", "transport"],
         "correct": ["≈ÇƒÖcze danych", "fizyczny"]},

        {"question": "Kt√≥re trzy akronimy reprezentujƒÖ organizacje normalizacyjne?",
         "options": ["IEEE", "IETF", "OSI", "IANA", "TCP/IP", "MAC"],
         "correct": ["IEEE", "IETF", "IANA"]},

        {"question": "Jakie trzy elementy majƒÖ wsp√≥lne wszystkie metody komunikacji?",
         "options": ["medium transmisyjne", "typ wiadomo≈õci", "priorytet wiadomo≈õci", "miejsce docelowe wiadomo≈õci", "≈∫r√≥d≈Ço wiadomo≈õci", "dane wiadomo≈õci"],
         "correct": ["medium transmisyjne", "miejsce docelowe wiadomo≈õci", "≈∫r√≥d≈Ço wiadomo≈õci"]},

        {"question": "Kt√≥re trzy warstwy mapy modelu OSI do warstwy aplikacji modelu TCP/IP?",
         "options": ["aplikacja", "≈ÇƒÖcze danych", "sieƒá", "transport", "prezentacja", "sesja"],
         "correct": ["aplikacja", "prezentacja", "sesja"]},

        {"question": "Kt√≥ra instrukcja definiuje protok√≥≈Ç komunikacji danych?",
         "options": ["Zestaw standard√≥w produkt√≥w", "Umowa wymiany danych", "Sojusz producent√≥w", "Zestaw zasad komunikacji"],
         "correct": "Zestaw zasad komunikacji"},

        {"question": "Kt√≥ry protok√≥≈Ç s≈Çu≈ºy do dynamicznego przydzielania adres√≥w IP?",
         "options": ["DNS", "HTTP", "DHCP", "FTP"],
         "correct": "DHCP"},

        {"question": "Jaki jest g≈Ç√≥wny cel NAT?",
         "options": ["ZarzƒÖdzanie ruchem", "Ukrywanie adres√≥w IP", "Szyfrowanie", "Poprawa QoS"],
         "correct": "Ukrywanie adres√≥w IP"},

        {"question": "W jakiej warstwie modelu OSI dzia≈Ça switch?",
         "options": ["Fizyczna", "≈ÅƒÖcza danych", "Sieciowa", "Transportowa"],
         "correct": "≈ÅƒÖcza danych"},

        {"question": "Jakie sƒÖ g≈Ç√≥wne zadania warstwy transportowej?",
         "options": ["Adresacja IP", "ZarzƒÖdzanie sesjƒÖ", "Kontrola przep≈Çywu", "Routing"],
         "correct": "Kontrola przep≈Çywu"},

        {"question": "Jaki protok√≥≈Ç jest u≈ºywany do bezpiecznego przesy≈Çania stron WWW?",
         "options": ["HTTP", "FTP", "HTTPS", "SNMP"],
         "correct": "HTTPS"},

        {"question": "Kt√≥ry adres IPv4 jest adresem rozg≈Çoszeniowym?",
         "options": ["192.168.1.255", "192.168.1.1", "127.0.0.1", "255.255.255.0"],
         "correct": "192.168.1.255"},

        {"question": "JakƒÖ d≈Çugo≈õƒá ma standardowy adres IPv6?",
         "options": ["32 bity", "64 bity", "128 bit√≥w", "256 bit√≥w"],
         "correct": "128 bit√≥w"},

        {"question": "Jak nazywa siƒô proces wykrywania adres√≥w MAC przez switch?",
         "options": ["Routing", "Flooding", "MAC learning", "ARP discovery"],
         "correct": "MAC learning"},

        {"question": "Co robi router, gdy nie zna adresu docelowego?",
         "options": ["Usuwa pakiet", "Przekazuje losowo", "Odrzuca pakiet", "Wysy≈Ça do bramy"],
         "correct": "Wysy≈Ça do bramy"},

        {"question": "Kt√≥ry protok√≥≈Ç jest u≈ºywany do przesy≈Çania e-maili?",
         "options": ["IMAP", "POP3", "SMTP", "DNS"],
         "correct": "SMTP"}
    ]

    for q in questions:
        print("\n" + q["question"])
        for idx, option in enumerate(q["options"], 1):
            print(f"{idx}. {option}")
        
        answer_index = input("üîπ Wybierz odpowied≈∫ (1-4): ").strip()
        
        if answer_index.isdigit():
            answer_index = int(answer_index) - 1  # Zamiana na indeks listy
            if 0 <= answer_index < len(q["options"]) and q["options"][answer_index] == q["correct"]:
                print("‚úÖ Poprawna odpowied≈∫!")
            else:
                print(f"‚ùå Niepoprawna. Prawid≈Çowa odpowied≈∫: {q['correct']}")
        
        print("\n" + "-" * 50)

if __name__ == "__main__":
    quiz()
